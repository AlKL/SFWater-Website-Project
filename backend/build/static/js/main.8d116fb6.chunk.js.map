{"version":3,"sources":["components/Frontpage.js","components/NotFound.js","components/AddCommentModal/FormField.js","components/AddCommentModal/AddCommentForm.js","components/AddCommentModal/CommentModal.js","components/AddCommentModal/CommentIndex.js","App.js","index.js"],"names":["Frontpage","className","NotFound","TextField","field","label","placeholder","Form","Field","style","color","name","initialValues","email","comment","AddCommentForm","onSubmit","onCancel","validate","values","requiredError","errors","test","isValid","dirty","component","Grid","Column","floated","width","Button","type","onClick","disabled","AddCommentModal","modalOpen","onClose","error","success","Modal","open","centered","closeIcon","Header","Content","Segment","inverted","AddComment","useState","setModalOpen","setError","setSuccess","submitNewComment","a","resetForm","axios","post","response","data","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d116fb6.chunk.js","sourcesContent":["import React from 'react';\nimport '../style.css';\n\nconst Frontpage = () => {\n    return (\n        <h1 className='title'>\n            Sparkling Fresh Water\n        </h1>\n    );\n};\n\nexport default Frontpage;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <h1>\n            404: Page Not Found\n        </h1>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport { ErrorMessage, Field } from 'formik';\nimport { Form } from 'semantic-ui-react';\n\nexport const TextField = ({\n    field,\n    label,\n    placeholder\n}) => (\n    <Form.Field>\n        <label>{label}: </label>\n        <Field placeholder={placeholder} {...field} />\n        <div style={{ color: 'red' }}>\n            <ErrorMessage name={field.name} />\n        </div>\n    </Form.Field>\n);","import React from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport { Field, Formik, Form } from 'formik';\nimport { TextField } from './FormField';\n\nconst initialValues = {\n    name: '',\n    email: '',\n    comment: ''\n};\n\nconst AddCommentForm = ({ onSubmit, onCancel }) => {\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validate={values => {\n                const requiredError = 'Field is required';\n                const errors = {};\n                if (!values.name) {\n                    errors.name = requiredError;\n                }\n                if (!values.email) {\n                    errors.email = requiredError;\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                    errors.email = 'Invalid email address';\n                }\n                if (!values.comment) {\n                    errors.comment = requiredError;\n                }\n                return errors;\n            }}\n        >\n            {({ isValid, dirty }) => {\n                return (\n                    <Form className=\"form ui\">\n                        <Field\n                            label=\"Name\"\n                            placeholder=\"Name\"\n                            name=\"name\"\n                            component={TextField}\n                        />\n                        <Field\n                            label=\"Email\"\n                            placeholder=\"E-Mail Address\"\n                            name=\"email\"\n                            component={TextField}\n                        />\n                        <Field\n                            label=\"Comment\"\n                            placeholder=\"Leave a comment\"\n                            name=\"comment\"\n                            component={TextField}\n                        />\n                        <Grid>\n                            <Grid.Column floated=\"left\" width={5}>\n                                <Button type=\"button\" onClick={(onCancel)} color=\"red\">\n                                    Cancel\n                                </Button>\n                            </Grid.Column>\n                            <Grid.Column floated=\"right\" width={5}>\n                                <Button\n                                    type=\"submit\"\n                                    floated=\"right\"\n                                    color=\"green\"\n                                    disabled={!dirty || !isValid}\n                                >\n                                    Add\n                                </Button>\n                            </Grid.Column>\n                        </Grid>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n};\n\nexport default AddCommentForm;","import React from 'react';\nimport { Modal, Segment } from 'semantic-ui-react';\nimport AddCommentForm from './AddCommentForm';\n\nconst AddCommentModal = ({ modalOpen, onClose, onSubmit, error, success }) => {\n    return (\n        <Modal open={modalOpen} onClose={onClose} centered={false} closeIcon>\n            <Modal.Header>Contact us:</Modal.Header>\n            {success}\n            <Modal.Content>\n                {error && <Segment inverted color=\"red\">{`Error: ${error}`}</Segment>}\n                <AddCommentForm onSubmit={onSubmit} onCancel={onClose} />\n            </Modal.Content>\n        </Modal>\n    );\n};\n\nexport default AddCommentModal;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button } from 'semantic-ui-react';\nimport AddCommentModal from './CommentModal';\nconst baseUrl = '/api/comments';\n\nconst AddComment = () => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n\n    const openModal = () => setModalOpen(true);\n    const closeModal = () => {\n        setModalOpen(false);\n        setSuccess(null);\n        setError(null);\n    };\n\n    const submitNewComment = async (values, { resetForm }) => {\n        try {\n            setError(null);\n            setSuccess(null);\n            resetForm({});\n            await axios.post(\n                // 'http://localhost:3001/api/comments',\n                // 'https://sfwaterproject.herokuapp.com/api/comments',\n                baseUrl,\n                values\n            );\n            setSuccess('Comment submitted successfully!');\n        } catch (e) {\n            // console.error(e.response.data);\n            // setError('Please try again');\n            setError(e.response.data);\n        }\n    };\n\n    return (\n        <div>\n            <AddCommentModal\n                modalOpen={modalOpen}\n                onSubmit={submitNewComment}\n                error={error}\n                onClose={closeModal}\n                success={success}\n            />\n            <Button onClick={() => openModal()}>Contact Us!</Button>\n        </div>\n    );\n};\n\nexport default AddComment;","import React from 'react';\nimport Frontpage from './components/Frontpage';\nimport NotFound from './components/NotFound';\nimport AddComment from './components/AddCommentModal/CommentIndex';\nimport { Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/'>\n          <Frontpage />\n          <AddComment />\n        </Route>\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}